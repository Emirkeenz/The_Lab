import os
from telegram import Update
from telegram.ext import ContextTypes

from utils.parser import extract_text_from_file, split_text_into_chunks, save_chunks_to_json, build_rag_index
from utils.ollama_client import summarize_text

LESSONS_DIR = "uploaded_lessons"

# === –ö–æ–º–∞–Ω–¥–∞ /upload_lesson ===
async def upload_lesson(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message.document:
        await update.message.reply_text("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –¥–æ–∫—É–º–µ–Ω—Ç (PDF –∏–ª–∏ DOCX) –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /upload_lesson.")
        return

    document = update.message.document
    file = await document.get_file()
    os.makedirs(LESSONS_DIR, exist_ok=True)
    file_path = os.path.join(LESSONS_DIR, document.file_name)
    await file.download_to_drive(file_path)

    try:
        text = extract_text_from_file(file_path)
        chunks = split_text_into_chunks(text)
        save_chunks_to_json(chunks, "math", document.file_name)
        build_rag_index(chunks, "math", document.file_name)  # üí° —Å–æ–∑–¥–∞—ë–º RAG-–∏–Ω–¥–µ–∫—Å —Å—Ä–∞–∑—É

        await update.message.reply_text(
            f"‚úÖ –£—Ä–æ–∫ ¬´{document.file_name}¬ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω.\n–ù–∞–ø–∏—à–∏ /start_lesson {document.file_name.split('.')[0]} üìñ"
        )
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
