import os
import logging
from telegram import Update, Document
from telegram.ext import ContextTypes

from utils.parser import extract_text_from_file, split_text_into_chunks

LESSONS_DIR = "uploaded_lessons"

# === –ö–æ–º–∞–Ω–¥–∞ /upload_lesson ===
async def upload_lesson(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message

    if not message.document:
        await message.reply_text("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –¥–æ–∫—É–º–µ–Ω—Ç (PDF –∏–ª–∏ DOCX) –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /upload_lesson.")
        return

    document: Document = message.document
    file_name = document.file_name

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    file = await document.get_file()
    file_path = os.path.join(LESSONS_DIR, file_name)
    await file.download_to_drive(file_path)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞
    try:
        raw_text = extract_text_from_file(file_path)
        chunks = split_text_into_chunks(raw_text)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data["lesson_chunks"] = chunks
        context.user_data["lesson_index"] = 0

        await message.reply_text(
            f"‚úÖ –£—Ä–æ–∫ ¬´{file_name}¬ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.\n–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –ù–∞–ø–∏—à–∏ ¬´–Ω–∞—á–∞—Ç—å —É—Ä–æ–∫¬ª üìñ"
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —É—Ä–æ–∫–∞: {e}")
        await message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —ç—Ç–æ PDF –∏–ª–∏ DOCX.")
