import os
import logging
from telegram import Update, Document
from telegram.ext import ContextTypes

from utils.parser import extract_text_from_file, split_text_into_chunks, save_chunks_to_json

LESSONS_DIR = "uploaded_lessons"

# === –ö–æ–º–∞–Ω–¥–∞ /upload_lesson ===
async def upload_lesson(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message.document:
        await update.message.reply_text("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –¥–æ–∫—É–º–µ–Ω—Ç (PDF –∏–ª–∏ DOCX) –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /upload_lesson.")
        return

    document = update.message.document
    file = await document.get_file()
    file_path = os.path.join("uploaded_lessons", document.file_name)
    os.makedirs("uploaded_lessons", exist_ok=True)
    await file.download_to_drive(file_path)

    try:
        text = extract_text_from_file(file_path)
        chunks = split_text_into_chunks(text)
        save_chunks_to_json(chunks, document.file_name, subject="math")

        await update.message.reply_text(
            f"‚úÖ –£—Ä–æ–∫ ¬´{document.file_name}¬ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.\n–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –ù–∞–ø–∏—à–∏ ¬´–Ω–∞—á–∞—Ç—å —É—Ä–æ–∫¬ª üìñ")
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")
